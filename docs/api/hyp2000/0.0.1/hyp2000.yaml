openapi: 3.0.0
info:
  contact:
    email: valentino.lauciani@ingv.it
    name: INGV
    url: http://terremoti.ingv.it/webservices_and_software
  description: "\n# Introduction\nHypoinverse is software used to Locate earthquakes\
    \ and determine magnitudes in a local or regional seismic network.\n\nMore info,\
    \ here: [https://www.usgs.gov/software/hypoinverse-earthquake-location](https://www.usgs.gov/software/hypoinverse-earthquake-location)\n\
    \nAt INGV we build stand-alone Docker to deploy \"hyp2000\" ([https://github.com/ingv/hyp2000](https://github.com/ingv/hyp2000))\
    \ and on top of this docker was build a Web Service.\n\n# Input\nThe input file\
    \ is a JSON with four sections: \n  - **HYP2000_CONF**: HYPOINVERS configuration\
    \ file (refer to manual for more details)\n  - **MODEL**: Crustal velocity model\n\
    \  - **OUTPUT**: It could be `json`, `prt`, `arc`, `sum`\n  - **TYPE_HYP2000ARC**:\
    \ An array of phases in **ew2openapi** format.\n\n# Output\nThe output could be\
    \ `json`, `prt`, `arc` or `sum`:\n  - `prt`: print format\n  - `arc`: archive\
    \ format\n  - `sum`: summary format\n  - `json`: NON STANDARD json format developed\
    \ in **ew2openapi**\n\n# Rate limit:\n  The **Rate Limit** and **Rate Reset**\
    \ are specified in the HTTP-header with `X-RateLimit-Limit` and `X-RateLimit-Reset`;\
    \ the rate limit is *per* `IP`."
  license:
    name: Creative Commons Attribution 4.0 International
    url: http://creativecommons.org/licenses/by/4.0/
  title: INGV HYP2000 Web Services
  version: 2.0.0
  x-api-id: fa78e2be-826e-4451-8979-0a0dfd598dff
  x-logo: http://webservices.ingv.it/ingv_logo_text_two_lines.png
  x-summary: The hyp2000 web service bla bla bla
servers:
- description: Production
  url: https://webservices.ingv.it/api/v1/hyp2000
paths:
  /v1/hyp2000/:
    post:
      description: Send new input to HYP2000 WS
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    HYP2000_CONF:
                      example:
                      - 200 T 2000 0
                      - LET 5 2 3 2 2
                      - H71 1 1 3
                      - STA './all_stations.hinv'
                      - CRH 1 './italy.crh'
                      - MAG 1 T 3 1
                      - DUR -.81 2.22 0 .0011 0, 5*0, 9999 1
                      - FC1 'D' 2 'HHZ' 'EHZ'
                      - PRE 7, 3 0 4 9, 5 6 4 9, 1 1 0 9, 2 1 0 9, 4 4 4 9, 3 0 0
                        9, 4 0 0 9
                      - RMS 4 .40 2 4
                      - ERR .10
                      - POS 1.78
                      - REP T T
                      - JUN T
                      - MIN 4
                      - NET 4
                      - ZTR 5 T
                      - DIS 6 100 1. 7.
                      - DAM 7 30 0.5 0.9 0.005 0.02 0.6 100 500
                      - WET 1. .75 .5 .25
                      - ERF T
                      - TOP F
                      - LST 1 1 0
                      - KPR 2
                      - COP 5
                      - CAR 3
                      - PRT '../output/hypo.prt'
                      - SUM '../output/hypo.sum'
                      - ARC '../output/hypo.arc'
                      - APP F T F
                      - CON 25 0.04 0.001
                      - PHS './input.arc'
                      - LOC
                    MODEL:
                      example:
                      - Italy
                      - 5.00  0.00
                      - 6.00 10.00
                      - 8.10 30.00
                    OUTPUT:
                      example:
                      - json
                    TYPE_HYP2000ARC:
                      allOf:
                      - properties:
                          phases:
                            $ref: '#/components/schemas/hyp2000arc__phases'
                          quakeId:
                            $ref: '#/components/schemas/event__id_locator'
                          version:
                            $ref: '#/components/schemas/type_hypocenter__name'
        description: JSON to send
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/hyp2000arc'
          description: successful operation
        '404':
          $ref: '#/components/responses/404NotFound'
      summary: Hypoinverse 2000
      tags:
      - hyp2000
components:
  headers:
    Retry-After:
      description: |-
        Retry contacting the endpoint *at least* after seconds.
        See https://tools.ietf.org/html/rfc7231#section-7.1.3
      schema:
        format: int32
        type: integer
    X-RateLimit-Limit:
      description: The number of allowed requests in the current period
      schema:
        format: int32
        type: integer
    X-RateLimit-Reset:
      description: The number of seconds left in the current period
      schema:
        format: int32
        type: integer
  responses:
    204NoContent:
      description: Request was properly formatted and submitted but no data matches
        the selection
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/X-RateLimit-Limit'
        X-RateLimit-Reset:
          $ref: '#/components/headers/X-RateLimit-Reset'
    400BadRequest:
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
      description: Bad Request
    404NotFound:
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
      description: Not Found
    429TooManyRequests:
      description: Too many requests
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/X-RateLimit-Limit'
        X-RateLimit-Reset:
          $ref: '#/components/headers/X-RateLimit-Reset'
    503ServiceUnavailable:
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
      description: Service Unavailable
      headers:
        Retry-After:
          $ref: '#/components/headers/Retry-After'
    default:
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
      description: Unexpected error
  schemas:
    Latitude:
      description: |-
        Latitude of a point expressed in:

        * the ETRS89 system for Italian and European territories
        * and in WGS84 for the others.
      example: 45.492599
      externalDocs:
        url: http://dati.gov.it/onto/clvapit#long
      format: double
      maximum: 90
      minimum: -90
      type: number
    Longitude:
      description: |-
        Longitude of a point expressed in:

        * the ETRS89 system for Italian and European territories
        * and in WGS84 for the others.
      example: 9.19289
      externalDocs:
        url: http://dati.gov.it/onto/clvapit#long
      format: double
      maximum: 180
      minimum: -180
      type: number
    Problem:
      properties:
        detail:
          description: |
            A human readable explanation specific to this occurrence of the
            problem. You MUST NOT expose internal informations, personal
            data or implementation details through this field.
          example: Request took too long to complete.
          type: string
        instance:
          description: |
            An absolute URI that identifies the specific occurrence of the problem.
            It may or may not yield further information if dereferenced.
          format: uri
          type: string
        status:
          description: |
            The HTTP status code generated by the origin server for this occurrence
            of the problem.
          example: 503
          exclusiveMaximum: true
          format: int32
          maximum: 600
          minimum: 100
          type: integer
        title:
          description: |
            A short, summary of the problem type. Written in english and readable
            for engineers (usually not suited for non technical stakeholders and
            not localized); example: Service Unavailable
          type: string
        type:
          default: about:blank
          description: |
            An absolute URI that identifies the problem type.  When dereferenced,
            it SHOULD provide human-readable documentation for the problem type
            (e.g., using HTML).
          example: https://tools.ietf.org/html/rfc7231#section-6.6.4
          format: uri
          type: string
      type: object
    cha:
      description: Channel code | char(3)
      example: HHZ
      type: string
    depth:
      description: Depth in Km | double
      example: 0.02
      format: double
      type: number
    event__id_locator:
      default: 0
      description: Event id created by locator | bigint(20)
      example: 182491
      format: int64
      type: integer
    ewLogo:
      properties:
        ewLogo:
          properties:
            hostname:
              description: Hostname | ???
              example: hew3.int.ingv.it
              type: string
            installation:
              description: Installation description | ???
              example: INST_INGV
              type: string
            instance:
              description: Instance description | ???
              example: hew3_mole
              type: string
            module:
              description: Module description | ???
              example: MOD_BINDER_EW
              type: string
            type:
              description: Type description | ???
              example: TYPE_QUAKE2K
              type: string
            user:
              description: Hostname user | ???
              example: ew
              type: string
          required:
          - type
          - module
          - installation
          - instance
    hyp2000arc:
      properties:
        data:
          allOf:
          - $ref: '#/components/schemas/ewLogo'
          - $ref: '#/components/schemas/hyp2000arc__base'
    hyp2000arc__base:
      properties:
        ewMessage:
          properties:
            Md:
              description: Md description | ???
              format: double
              type: number
            Mpref:
              description: Mpref description | ???
              format: double
              type: number
            depth:
              $ref: '#/components/schemas/depth'
            dmin:
              description: dmin description | ???
              format: double
              type: number
            e0:
              $ref: '#/components/schemas/hypocenter__e0'
            e0az:
              $ref: '#/components/schemas/hypocenter__e0_az'
            e0dp:
              $ref: '#/components/schemas/hypocenter__e0_dip'
            e1:
              $ref: '#/components/schemas/hypocenter__e1'
            e1az:
              $ref: '#/components/schemas/hypocenter__e1_az'
            e1dp:
              $ref: '#/components/schemas/hypocenter__e1_dip'
            e2:
              $ref: '#/components/schemas/hypocenter__e2'
            erh:
              $ref: '#/components/schemas/hypocenter__err_h'
            erz:
              $ref: '#/components/schemas/hypocenter__err_z'
            gap:
              $ref: '#/components/schemas/hypocenter__azim_gap'
            ingvQuality:
              description: ingvQuality description | ???
              example: DD
              type: string
            labelpref:
              description: ingvQuality description | ???
              example: ' '
              type: string
            latitude:
              $ref: '#/components/schemas/latitude'
            longitude:
              $ref: '#/components/schemas/longitude'
            mdmad:
              description: mdmad description | ???
              format: double
              type: number
            mdtype:
              description: ingvQuality description | ???
              example: D
              type: string
            mdwt:
              description: mdwt description | ???
              format: double
              type: number
            nPfm:
              $ref: '#/components/schemas/hypocenter__nph_fm'
            nph:
              $ref: '#/components/schemas/hypocenter__nph'
            nphS:
              $ref: '#/components/schemas/hypocenter__nph_s'
            nphtot:
              $ref: '#/components/schemas/hypocenter__nph_tot'
            originTime:
              $ref: '#/components/schemas/hypocenter__ot'
            phases:
              $ref: '#/components/schemas/hyp2000arc__phases'
            quakeId:
              $ref: '#/components/schemas/event__id_locator'
            reg:
              description: ingvQuality description | ???
              example: ' '
              type: string
            rms:
              $ref: '#/components/schemas/hypocenter__rms'
            version:
              $ref: '#/components/schemas/type_hypocenter__name'
            wtpref:
              description: wtpref description | ???
              format: double
              type: number
          required:
          - quakeId
          - version
          - originTime
          - latitude
          - longitude
          - depth
    hyp2000arc__phases:
      items:
        properties:
          Md:
            description: Todo description | ???
            format: double
            type: number
          Pat:
            $ref: '#/components/schemas/hypocenter__ot'
          Pfm:
            description: Todo description | ???
            example: ' '
            type: string
          Plabel:
            description: Todo description | ???
            example: ' '
            type: string
          Ponset:
            description: Todo description | ???
            example: P
            type: string
          Pqual:
            description: Todo description | ???
            format: double
            type: number
          Pres:
            description: Todo description | ???
            format: double
            type: number
          Pwt:
            description: Todo description | ???
            format: double
            type: number
          Sat:
            $ref: '#/components/schemas/hypocenter__ot'
          Sfm:
            description: Todo description | ???
            example: ' '
            type: string
          Slabel:
            description: Todo description | ???
            example: ' '
            type: string
          Sonset:
            description: Todo description | ???
            example: ' '
            type: string
          Squal:
            description: Todo description | ???
            format: double
            type: number
          Sres:
            description: Todo description | ???
            format: double
            type: number
          Swt:
            description: Todo description | ???
            format: double
            type: number
          ampMag:
            description: Amplitude magnitude for this station | col98 F3.2
            format: float
            type: number
          ampMagWeightCode:
            description: Amplitude magnitude weight code | col82 I1
            type: integer
          ampType:
            description: Amplitude type 0=unspecified 1=Wood-Anderson 2=velocity 3=acceleration
              4=no magnitude | col114 I2
            type: integer
          ampUnitsCode:
            description: Amp units code. 0=PP mm, 1=0 to peak mm (UCB), 2=digital
              counts | col62 I2
            type: integer
          amplitude:
            description: Amplitude (Normally peak-to-peak) | col55 F7.2
            format: float
            type: number
          azm:
            description: Todo description | ???
            format: double
            type: number
          caav:
            items:
              description: Todo description | ???
              example:
              - 0
              - 0
              - 0
              - 0
              - 0
            type: array
          ccntr:
            items:
              description: Todo description | ???
              example:
              - 0
              - 0
              - 0
              - 0
              - 0
            type: array
          codalen:
            description: Todo description | ???
            format: double
            type: number
          codalenObs:
            description: Todo description | ???
            format: double
            type: number
          codawt:
            description: Todo description | ???
            format: double
            type: number
          comp:
            $ref: '#/components/schemas/cha'
          datasrc:
            description: Todo description | ???
            example: W
            type: string
          dist:
            description: Todo description | ???
            format: double
            type: number
          importanceP:
            description: Importance of P arrival | col101 F4.3
            format: float
            type: number
          importanceS:
            description: Importance of S arrival | col105 F4.3
            format: float
            type: number
          latitude:
            $ref: '#/components/schemas/latitude'
          loc:
            $ref: '#/components/schemas/loc'
          longitude:
            $ref: '#/components/schemas/longitude'
          net:
            $ref: '#/components/schemas/net'
          pamp:
            description: Todo description | ???
            format: double
            type: number
          sta:
            $ref: '#/components/schemas/sta'
          takeoff:
            description: Todo description | ???
            format: double
            type: number
        required:
        - net
        - sta
        - comp
        - loc
      type: array
    hypocenter__azim_gap:
      description: Azimutal gap | double
      format: double
      type: number
    hypocenter__e0:
      description: magnitude (km) of largest principal error | double
      format: double
      type: number
    hypocenter__e0_az:
      description: azimuth of largest principal error | double
      format: double
      type: integer
    hypocenter__e0_dip:
      description: dip of largest principal error | double
      format: double
      type: integer
    hypocenter__e1:
      description: magnitude (km) of intermed principal error | double
      format: double
      type: number
    hypocenter__e1_az:
      description: azimuth of intermediate principal error | double
      format: double
      type: integer
    hypocenter__e1_dip:
      description: dip of intermediate principal error | double
      format: double
      type: integer
    hypocenter__e2:
      description: magnitude (km) of smallest principal error | double
      format: double
      type: number
    hypocenter__err_h:
      description: Depth error | double
      format: double
      type: number
    hypocenter__err_z:
      description: Depth error | double
      format: double
      type: number
    hypocenter__nph:
      description: '# phases (P&S) weight >0.1 | int(11)'
      format: int64
      type: integer
    hypocenter__nph_fm:
      description: '# P first motions | int(11)'
      format: int64
      type: integer
    hypocenter__nph_s:
      description: '# S phases weight >0.1 | int(11)'
      format: int64
      type: integer
    hypocenter__nph_tot:
      description: '# phases (P&S) weight >0.0 | int(11)'
      format: int64
      type: integer
    hypocenter__ot:
      description: Origin time | datetime(6)
      example: '2016-06-22 16:52:06.260000'
      type: string
    hypocenter__rms:
      description: Root mean square | double
      format: double
      type: number
    latitude:
      $ref: '#/components/schemas/Latitude'
    loc:
      default: --
      description: Channel location | char(2)
      example: '00'
      type: string
    longitude:
      $ref: '#/components/schemas/Longitude'
    net:
      description: Channel net code | char(2)
      example: IV
      type: string
    pippo:
      $ref: '#/components/schemas/Longitude'
    sta:
      description: Channel station code | varchar(5)
      example: ACER
      type: string
    type_hypocenter__name:
      description: Localization name (es:01,XX,WW,..) | varchar(255)
      example: ew prelim
      type: string
